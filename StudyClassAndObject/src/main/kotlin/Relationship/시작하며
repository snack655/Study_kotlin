현실 세계에서는 사람들끼리 서로 관계를 맺고 서로 메시지(Message)를 주고받으며,
필요한 경우 서로의 관계를 이용하며 우리의 삶을 풍요롭게 한다.

혹은 사장과 직원 간의 관계처럼 주로 단방향의 지시 메세지를 보내는 관계도 있다.

때로는 자동차와 엔진처럼 종속적인 관계가 만들어져 자동차에서 차체가 없으면 엔진 혼자서는
별로 의미가 없는 경우도 있다.

아버지와 아들처럼 상속의 관계도 있다.

프로그래밍도 마찬가지다.
클래스 하나만 덩그러니 남아 있는 경우에는 할 수 있는 게 많지 않다.
클래스들 간에 관계가 만들어지고 메시지를 전달하면서 복잡한 현실 세계와 비슷하게 프로그래밍을 설계할 수 있다.