클래스들이나 객체들 간의 관계(Relationship)는 약하게 연결된 관계부터 강하게 결합된 관계가 있다.

먼저 약하게 참조되고 있는 관계로 연관(Associate)이나 의존(Dependency) 관계가 있다.
이런 관계에서는 보통 소유의 개념 없이 어떤 객체에서 또 다른 객체를 '이용한다'라고 말할 수 있다.

예를 들어,
환자와 의사의 관계를 생각해 보면, 의사는 다수의 환자들을 치료할 수 있다.
또 환자는 의사로부터 치료를 받지만 필요한 경우 다른 의사를 찾아가기도 한다.
서로 이용하지만 한쪽이 다른 쪽을 소유하는 관계는 아닌 것이다.
서로의 생명주기(Life-cycle)도 다르다.
만일 의사가 환자의 목록을 가지지 않은 상태라면 참조가 없는 단순한 연관관계이고,
환자가 등록해서 의사의 관리 목록에 있다면 환자 목록을 가진 참조 상태이므로 의존 관계가 된다.

이런 경우도 생각해보자.
연못(Pond) 클래스는 다수의 오리(Duck)를 가질 수 있다.
연못(Pond)과 같이 무언가 여러 요소를 담을 수 있는 컨테이너 자료형에 해당하는 경우에는 포함 관계를 위한 개수를 적어준다.
제로(0), 하나(0..1) 혹은 다수(0..*)의 객체와 연관을 가질 수 있다는 것을 나타내기 위한 표기법을 사용하기도 한다.
연못에 오리가 한 마리도 없을 경우도 있으니 개수 관계는 0..*로 표기할 수 있다.
따라서 연못과 오리는 집합(Aggregation) 관계라고 한다.

마지막으로 합성 혹은 구성(Composition) 관계에 있는 경우 두 개체가 아주 밀접하게 관련되어 있어
독립적으로 존재하기 힘든 것을 말한다.