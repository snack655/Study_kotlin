also() 함수 활용하기

also() 함수는 함수를 호출하는 객체 T를 이어지는 block에 전달하고 객체 T 자체를 반환한다.
선언부의 let() 함수와 also() 함수의 차이점을 비교해 보자.

public inline fun <T, R> T.let(block: (T) -> R): R = block(this)
public inline fun <T> T.also(block: (T) -> Unit): T { block(this); return this }

also() 함수는 let() 함수와 역할이 거의 동일해 보인다.
하지만 자세히 보면 반환하는 값이 다른데,
let() 함수는 마지막으로 수행된 코드 블록의 결과를 반환하고
also() 함수는 블록 안의 코드 수행 결과와 상관없이 T인 객체 this를 반환한다.
짧은 코드로 보자면

var m = 1
m = m.also { it + 3 }
println(m)  // 원본 값 1

위의 코드처럼 연산 결과인 4가 할당되는 것이 아니라 it의 원래의 값 1이 다시 m에 할당된다.
