프로세스와 스레드의 게념

태스크는 큰 실행 단위인 프로세스나 좀 더 작은 실행 단위인 스레드를 말한다.

하나의 프로그램이 실행되면 프로세스가 시작되는데 프로세스는 실행되는
메모리, 스택, 열린 파일 등을 모두 포함하기 때문에
프로세스 간 문맥 교환(Context-Switching)을 할 때 많은 비용이 든다.

반면 스레드는 자신의 스택만 독립적으로 가지고 나머지는
대부분 스레드끼리 공유하므로 문맥 교환 비용이 낮아 프로그래밍에서 많이 사용된다.
다만 여러 개의 스레드를 구분하면 코드가 복잡해진다.
이러한 멀티 스레드(multi-thread)를 구현하기 위해서는
저수준에서 운영체제의 개념과 스케줄링, 스레드와 프로세스에 대해 깊은 이해가 있어야 한다.

응용 프로그래머 입장에서 운영체제를 깊게 이해하지 않더라도 동시성 프로그래밍을 이용할 수 있는 방법이 있을까?
코틀린에서는 새롭게 등장한 코루틴 개념을 사용하면
이러한 전통적인 스레드 개념을 만들지 않고도 좀 더 쉽게 비동기 프로그래밍을 할 수 있다.
코투린을 문맥 교환이 없고 최적화된 비동기 함수를 통해 비선점형으로 작동하는 특징이 있어
협력형 멀티태스킹(Cooperative Multitasking)을 구현할 수 있게 해 준다.


