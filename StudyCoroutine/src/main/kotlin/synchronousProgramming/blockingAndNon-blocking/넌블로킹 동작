넌블로킹 동작

이번에는 500쪽의 밑의 다이어그램을 보자.

넌블로킹 형태의 프로세스에서는 입출력 요청을 하더라도 운영체제에 의해 EAGAIN과 같은
시그널을 태스크 A가 받아서 실행을 재개할 수 있다.
이때 태스크 A는 다른 루틴을 수행하다가 내부적으로 입출력 완료 시그널을 받은 후
콜백 루틴(Callback Routine) 등을 호출해 완료된 이후의 일을 처리할 수 있다.

이러한 처리는 코드의 흐름을 멈추지 않고 다른 루틴을 먼저 수행할 수 있기 때문에
실행 시간이 더 빠르고 좀 더 좋은 성능을 보인다.

태스크 A를 수행하는 도중에 또 다른 태스크 B가 생성될 수 있는데
이때 태스크 A와 B는 비동기적으로 수행될 수 있다.

이 경우에는 A와 B의 실행 시점이 운영체제에 의해 결정되기 때문에
어떤 것이 어떻게 수행될지는 프로그래머가 알 수 없고
2개의 태스크 사이에 운영체제의 스케줄링 기법에 의해 결정된다.

위 다이어그램에서는 2개의 태스크가 동시에 수행되는 것처럼 보이나 프로세서 코어 수에 따라
동시에 수행될 수도 있고 2개의 태스크를 자주 교환해 동시에 수행되는 것처럼 보이게 할 수 있다.
여러 개의 코어가 태스크가 동시에 수행되는 것을 병행 수행(Concurrency)이라고 한다.