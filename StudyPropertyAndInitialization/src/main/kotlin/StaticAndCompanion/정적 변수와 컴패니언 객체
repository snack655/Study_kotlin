정적 변수와 컴패니언 객체

보통 우리가 사용할 수 있는 변수는 사용 범위에 따라 지역 변수(Local Variable)와 전역 변수(Global Variable)로 나뉜다.
이런 변수들은 초기화를 통해서 사용되며 변수가 영향을 미치는 영역이 있다.

지역 변수는 특정 코드 블록 안에 사용되는 변수로서 원래 있던 코드 블록을 벗어나면 해당 변수는 프로그램 메모리에서
더 이상 사용되지 않고 삭제된다.

전역 변수는 프로그램 특정 코드 블록 외부에 있는 변수로서 프로그램이 실행되는 동안 메모리에서 유지될 수 있다.
편리하기도 하지만 코드가 길어질 경우 잘못된 동작을 유발할 수 있으므로 많이 사용하지 않는 것이 좋다.

그리고 클래스는 인스턴스를 생성해 메모리에 동적으로 초기화해서 사용한다.
마찬가지로 클래스에 사용하는 프로퍼티나 메서드도 코드의 블록 영역에 따라 사용하는 범위가 결정된다.
그렇다면 모든 변수나 클래스의 객체는 꼭 동적으로 객체를 생성해서 사용해야만 할까?

동적인 초기화 없이 사용할 수 있는 변수 개념이 있다.
바로 정적 변수(Static Variable)나 컴패니언 객체(Companion Object)를 사용하는 것이다.
이것은 동적인 메모리에 할당 해제되는 것이 아닌 프로그램을 실행할 때 고정적으로 가지는 메모리로
객체 생성 없이 사용할 수 있다.


일반적인 클래스의 객체 생성 없이 정적 변수나 메서드를 사용하면 프로그램 실행 시 메모리를 고정적으로
가지게 되어 따로 인스턴스화할 필요 없이 사용할 수 있다.
독립적으로 값을 가지고 있기 때문에 어떠한 객체라도 동일한 참조값을 가지고 있어 해당 클래스의 상태에
상관없이 접근할 수 있다.
따라서 모든 객체에 의해 공유되는 효과를 가진다.